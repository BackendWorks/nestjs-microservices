version: "3"

services:
  user:
    build:
      context: ./user
      dockerfile: Dockerfile
    restart: always
    hostname: ${USER_HOST}
    ports:
      - ${USER_PORT}:${USER_PORT}
    env_file:
      - ./user/.env
    networks:
      - backend
    volumes:
      - ./user:/var/www/user
      - /var/www/user/node_modules
    depends_on:
      - fluent-bit
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
  token:
    build:
      context: ./token
      dockerfile: Dockerfile
    restart: always
    hostname: ${TOKEN_HOST}
    env_file:
      - ./token/.env
    networks:
      - backend
    depends_on:
      - fluent-bit
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
  post:
    build:
      context: ./post
      dockerfile: Dockerfile
    hostname: ${POST_HOST}
    ports:
      - ${POST_PORT}:${POST_PORT}
    env_file:
      - ./post/.env
    networks:
      - backend
    volumes:
      - ./post:/var/www/post
      - /var/www/post/node_modules
    depends_on:
      - fluent-bit
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
  notification:
    build:
      context: ./notification
      dockerfile: Dockerfile
    hostname: ${NOTIFICATION_HOST}
    ports:
      - ${NOTIFICATION_PORT}:${NOTIFICATION_PORT}
    env_file:
      - ./notification/.env
    networks:
      - backend
    volumes:
      - ./notification:/var/www/notification
      - /var/www/notification/node_modules
    depends_on:
      - fluent-bit
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
  files:
    build:
      context: ./files
      dockerfile: Dockerfile
    hostname: ${FILES_HOST}
    ports:
      - ${FILES_PORT}:${FILES_PORT}
    env_file:
      - ./files/.env
    networks:
      - backend
    volumes:
      - ./files:/var/www/files
      - /var/www/files/node_modules
    depends_on:
      - fluent-bit
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
  mailer:
    build:
      context: ./mailer
      dockerfile: Dockerfile
    restart: always
    hostname: ${MAILER_HOST}
    env_file:
      - ./mailer/.env
    networks:
      - backend
    depends_on:
      - fluent-bit
    volumes:
      - ./mailer:/var/www/mailer
      - /var/www/mailer/node_modules
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
  kong:
    build:
      context: ./kong
      dockerfile: Dockerfile
    container_name: kong
    restart: always
    networks:
      - backend
    command: "kong start"
    depends_on:
      - fluent-bit
    volumes:
      - ./kong/kong.yml:/usr/local/kong/declarative/kong.yml
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
      KONG_PROXY_LISTEN: 0.0.0.0:8080
      KONG_PROXY_LISTEN_SSL: 0.0.0.0:8443
      KONG_ADMIN_LISTEN: 0.0.0.0:9000
    ports:
      - "8080:8080"
      - "9000:9000"
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
  database:
    image: postgres:latest
    container_name: postgres
    depends_on:
      - fluent-bit
    ports:
      - 5431:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=master123
      - POSTGRES_DB=postgres
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - backend
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: rabbitmq
    depends_on:
      - fluent-bit
    volumes:
      - rabbit_data:/var/lib/rabbitmq
    ports:
      - "5671:5672"
      - "15671:15672"
    env_file:
      - .env
    networks:
      - backend
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
  cache:
    hostname: redis
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    networks:
      - backend
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
  mongodb:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: master123
    ports:
      - 27018:27017
    volumes:
      - mongodb:/data/db
    networks:
      - backend
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
  fluent-bit:
    image: grafana/fluent-bit-plugin-loki:latest
    container_name: fluent-bit
    environment:
      - LOKI_URL=http://loki:3100/loki/api/v1/push
    volumes:
      - ./fluent-bit/conf/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    networks:
      - backend
  loki:
    image: grafana/loki:latest
    container_name: loki
    expose:
      - "3100"
    networks:
      - backend
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      GF_RENDERING_SERVER_URL: http://renderer:8081/render
      GF_RENDERING_CALLBACK_URL: http://grafana:3000/
      GF_LOG_FILTERS: rendering:debug
    networks:
      - backend
  renderer:
    image: grafana/grafana-image-renderer:latest
    container_name: grafana-image-renderer
    expose:
      - "8081"
    environment:
      ENABLE_METRICS: "true"
    networks:
      - backend
networks:
  backend:
    driver: bridge
volumes:
  pg_data:
    driver: local
  rabbit_data:
    driver: local
  mongodb:
    driver: local
