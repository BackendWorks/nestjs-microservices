version: "3"

services:
  # kong:
  #   image: 339146391262.dkr.ecr.ap-south-1.amazonaws.com/nestjs-ms:kong
  #   command: "kong start"
  #   environment:
  #     KONG_DATABASE: "off"
  #     KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
  #     KONG_PROXY_LISTEN: 0.0.0.0:8080
  #     KONG_PROXY_LISTEN_SSL: 0.0.0.0:8443
  #     KONG_ADMIN_LISTEN: 0.0.0.0:9000
  #   ports:
  #     - "8080:8080"
  #     - "9000:9000"
  user:
    image: 339146391262.dkr.ecr.ap-south-1.amazonaws.com/nestjs-ms:user
    env_file:
      - ./user/.env
  post:
    image: 339146391262.dkr.ecr.ap-south-1.amazonaws.com/nestjs-ms:post
    env_file:
      - ./post/.env
  notification:
    image: 339146391262.dkr.ecr.ap-south-1.amazonaws.com/nestjs-ms:notification
    env_file:
      - ./notification/.env
  files:
    image: 339146391262.dkr.ecr.ap-south-1.amazonaws.com/nestjs-ms:files
    env_file:
      - ./files/.env
  mailer:
    image: 339146391262.dkr.ecr.ap-south-1.amazonaws.com/nestjs-ms:mailer
    env_file:
      - ./mailer/.env
  token:
    image: 339146391262.dkr.ecr.ap-south-1.amazonaws.com/nestjs-ms:token
    env_file:
      - ./token/.env

# Below code is for deployment of postgres and mongodb using compose cli. 
# It will create EFS volumes in AWS.
# volumes:
#   mongo_data:
#     driver_opts:
#       performance-mode: maxIO
#       throughput-mode: bursting
#       uid: 0
#       gid: 0
#   pg_data:
#     driver_opts:
#       performance-mode: maxIO
#       throughput-mode: bursting
#       uid: 0
#       gid: 0
